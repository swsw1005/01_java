transaction 처리시 rollback에 관련하여 
 
 
데이터를 조회한 결과를 가지고 어떤 프로세스를 진행한 후에 

각각의 데이타가 처리된 결과에 따라 commit과 rollback를 하는데 있어서 

다음과 같이.... 

rs = pstmt.excuteQuery(); 

while (rs.next()) { 
      try{
    	 setAutocommit(false);
    	 // DB작업 
  	 resultBoolean= some_Method(); 
        
        con.commit();
 
	}catch(Exception ex)
	{
            con.rollback();	
	}
   
} 

기존에는 while문을 다 처리하고 나서 setAutocommit(false)로 commit를 시켰는데... 
이 프로세스가 오래걸리다 보니 중간에 DB가 끊기는 현상이 나올수 있다  
그래서 한건씩 처리하면서 그 결과에 따라 하나씩 commit이나 rollbak를 한다 
 
     
 
 
 
 
 
2006-09-15 14:04:57.0  /  글번호 : 297153    
 
메소드를 분리시키시는 것이... sdystove 
 
 
엉뚱한 소리 하는 것일 수도 있겠지만... 

굳이 

while(rs.next()){ 
    // 데이터베이스 INSERT, UPDATE 작업 
} 

이렇게 하시는 것 보다.. 

List selectList = getSelectList();   // 조회 결과가 저장된 리스트 객체, 빈객체 또는 맵객체들의 리스트 

// bean 클래스 만들기 귀찮으시면 Map 을 이용해도 편하고 괜찮아요~ 
// Map map = new HashMap(); 
// map.put("컬럼명", "값"); 
// 요렇게 하면 Map을 Bean 클래스 비슷하게 사용할 수 있습니다. 

for( int idx=0; selectList.size(); idx++ ){ 
      // 빈객체가 저장된 경우.. 
      SomeBean bean = (SomeBean)selectList.get(idx); 
      someMethod(bean);         // 트랜젝션 처리는 SomeMethod 안에서 
} 



// someMethod 
private boolean someMethod(SomeBean bean){ 
      boolean result = false; 
      Connection conn = getConnection(); 
      conn.setAutoCommit(false); 

      try{ 
               // 테이블 1 INSERT 
               // 테이블 2 INSERT 
               result = true; 
               conn.commit(); 
      }catch( SQLException ex ){ 
               conn.rollback(); 
      }finally{ 
               conn.setAutoCommit(); 
               conn.close(); 
      } 

      return result; 
} 
 
